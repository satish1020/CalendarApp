{"ast":null,"code":"var _jsxFileName = \"/Users/schakkirala2/Desktop/Projects/calendar-view/src/CalendarApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CalendarHeader from './CalendarHeader';\nimport Weekdays from './Weekdays';\nimport DaysGrid from './DaysGrid';\nimport EventsList from './EventsList';\nimport EventPopup from './EventPopup';\nimport { getDaysInMonth, isFirstDayOfMonth, isToday } from './dateUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarApp = () => {\n  _s();\n  const currentDate = new Date();\n  const [currentMonth, setCurrentMonth] = useState(currentDate.getMonth());\n  const [currentYear, setCurrentYear] = useState(currentDate.getFullYear());\n  const [selectedDate, setSelectedDate] = useState(currentDate);\n  const [showEventPopup, setShowEventPopup] = useState(false);\n  const [events, setEvents] = useState([]);\n  const [eventDetails, setEventDetails] = useState({\n    time: '00:00',\n    text: ''\n  });\n  const [editingEventId, setEditingEventId] = useState(null);\n  const handleDayClick = day => {\n    const clickedDate = new Date(currentYear, currentMonth, day);\n    if (clickedDate >= currentDate || isToday(clickedDate, currentDate)) {\n      setSelectedDate(clickedDate);\n      setShowEventPopup(true);\n      setEventDetails({\n        ...eventDetails,\n        time: '00:00',\n        text: ''\n      });\n      setEditingEventId(null);\n    }\n  };\n  const handleEventSubmit = newEvent => {\n    let updatedEvents = editingEventId ? events.map(event => event.id === editingEventId ? newEvent : event) : [...events, newEvent];\n    updatedEvents.sort((a, b) => new Date(a.date) - new Date(b.date));\n    setEvents(updatedEvents);\n    setShowEventPopup(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-app\",\n    children: [/*#__PURE__*/_jsxDEV(CalendarHeader, {\n      currentMonth: currentMonth,\n      currentYear: currentYear,\n      setCurrentMonth: setCurrentMonth,\n      setCurrentYear: setCurrentYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Weekdays, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DaysGrid, {\n      currentMonth: currentMonth,\n      currentYear: currentYear,\n      daysInMonth: getDaysInMonth(currentYear, currentMonth),\n      firstDayOfMonth: isFirstDayOfMonth(currentYear, currentMonth),\n      handleDayClick: handleDayClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), showEventPopup && /*#__PURE__*/_jsxDEV(EventPopup, {\n      eventDetails: eventDetails,\n      setEventDetails: setEventDetails,\n      handleEventSubmit: handleEventSubmit,\n      setShowEventPopup: setShowEventPopup,\n      editingEventId: editingEventId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events,\n      setEvents: setEvents,\n      setEditingEventId: setEditingEventId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarApp, \"EOZqfwH5srOr+cJ2HP8Ao7O7Lo0=\");\n_c = CalendarApp;\nexport default CalendarApp;\nvar _c;\n$RefreshReg$(_c, \"CalendarApp\");","map":{"version":3,"names":["React","useState","CalendarHeader","Weekdays","DaysGrid","EventsList","EventPopup","getDaysInMonth","isFirstDayOfMonth","isToday","jsxDEV","_jsxDEV","CalendarApp","_s","currentDate","Date","currentMonth","setCurrentMonth","getMonth","currentYear","setCurrentYear","getFullYear","selectedDate","setSelectedDate","showEventPopup","setShowEventPopup","events","setEvents","eventDetails","setEventDetails","time","text","editingEventId","setEditingEventId","handleDayClick","day","clickedDate","handleEventSubmit","newEvent","updatedEvents","map","event","id","sort","a","b","date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","daysInMonth","firstDayOfMonth","_c","$RefreshReg$"],"sources":["/Users/schakkirala2/Desktop/Projects/calendar-view/src/CalendarApp.js"],"sourcesContent":["import React, { useState } from 'react';\nimport CalendarHeader from './CalendarHeader';\nimport Weekdays from './Weekdays';\nimport DaysGrid from './DaysGrid';\nimport EventsList from './EventsList';\nimport EventPopup from './EventPopup';\nimport { getDaysInMonth, isFirstDayOfMonth, isToday } from './dateUtils';\n\nconst CalendarApp = () => {\n  const currentDate = new Date();\n  const [currentMonth, setCurrentMonth] = useState(currentDate.getMonth());\n  const [currentYear, setCurrentYear] = useState(currentDate.getFullYear());\n  const [selectedDate, setSelectedDate] = useState(currentDate);\n  const [showEventPopup, setShowEventPopup] = useState(false);\n  const [events, setEvents] = useState([]);\n  const [eventDetails, setEventDetails] = useState({ time: '00:00', text: '' });\n  const [editingEventId, setEditingEventId] = useState(null);\n\n  const handleDayClick = (day) => {\n    const clickedDate = new Date(currentYear, currentMonth, day);\n    if (clickedDate >= currentDate || isToday(clickedDate, currentDate)) {\n      setSelectedDate(clickedDate);\n      setShowEventPopup(true);\n      setEventDetails({ ...eventDetails, time: '00:00', text: '' });\n      setEditingEventId(null);\n    }\n  };\n\n  const handleEventSubmit = (newEvent) => {\n    let updatedEvents = editingEventId\n      ? events.map((event) => (event.id === editingEventId ? newEvent : event))\n      : [...events, newEvent];\n    updatedEvents.sort((a, b) => new Date(a.date) - new Date(b.date));\n    setEvents(updatedEvents);\n    setShowEventPopup(false);\n  };\n\n  return (\n    <div className=\"calendar-app\">\n      <CalendarHeader\n        currentMonth={currentMonth}\n        currentYear={currentYear}\n        setCurrentMonth={setCurrentMonth}\n        setCurrentYear={setCurrentYear}\n      />\n      <Weekdays />\n      <DaysGrid\n        currentMonth={currentMonth}\n        currentYear={currentYear}\n        daysInMonth={getDaysInMonth(currentYear, currentMonth)}\n        firstDayOfMonth={isFirstDayOfMonth(currentYear, currentMonth)}\n        handleDayClick={handleDayClick}\n      />\n      {showEventPopup && (\n        <EventPopup\n          eventDetails={eventDetails}\n          setEventDetails={setEventDetails}\n          handleEventSubmit={handleEventSubmit}\n          setShowEventPopup={setShowEventPopup}\n          editingEventId={editingEventId}\n        />\n      )}\n      <EventsList events={events} setEvents={setEvents} setEditingEventId={setEditingEventId} />\n    </div>\n  );\n};\n\nexport default CalendarApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}